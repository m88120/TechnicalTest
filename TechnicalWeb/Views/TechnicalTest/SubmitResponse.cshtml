@model TechnicalCore.Models.ExamDetailModel
@{
    ViewBag.Title = "My Test";
    Layout = null;
}
<link href="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.4/summernote.css" rel="stylesheet" />
<style>
    .note-toolbar panel-heading {
        display: none !important;
    }
</style>
<div>

    <hr />
    @if (Model != null)
    {
        using (Html.BeginForm("SubmitResponse", "TechnicalTest", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ExamSessonId)
            @Html.HiddenFor(x => x.UniqueId)
            
            @*<div class="form-group">
                @Html.LabelFor(x => x.Testdata, "Copy and Paste your code:", new { @class = "col-md-4 control-label" })

                <div class="clearfix">
                </div>
                @Html.TextAreaFor(x => x.Testdata, new { rows = "6", @class = "form-control col-md-8 summernote" })
            </div>*@
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        @Html.LabelFor(x => x.File, "Upload a zip file of your solution:", new { @class = "" })
                    </div>
                    @Html.TextBoxFor(x => x.File, new { type = "file", @class = "col-md-12 " })
                </div>

            </div>
            <div class="form-group">
                @Html.ValidationSummary("", new { @class = "text-danger validation-summary-errors col-md-offset-3 col-md-9" })
            </div>
            <div class="form-group actions">
                <input type="submit" value="Submit Test Response" class="btn btn-blue" />
            </div>
        }
    }
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/summernote/0.8.4/summernote.js"></script>
    @*<script>
            $(document).ready(function () {
                // Initialize Editor
                $('.textarea-editor').summernote({
                    height: 300, // set editor height
                    minHeight: null, // set minimum height of editor
                    maxHeight: null, // set maximum height of editor
                    focus: true // set focus to editable area after initializing summernote
                });
            });


        </script>*@
    <script>
        $(document).ready(function () {
            $('.summernote').summernote({
                toolbar: [
                    // [groupName, [list of button]]
                    ['style', ['undo', 'redo', 'bold', 'italic', 'underline', 'clear']],
                    ['font', ['strikethrough', 'superscript', 'subscript']],
                    ['fontsize', ['fontsize']],
                    ['color', ['color']],
                    ['para', ['ul', 'ol', 'paragraph', 'style']],
                    ['height', ['height']],
                    ['insert', ['table', 'hr']],
                    ['misc', ['fullscreen', 'codeview', 'help']]

                ]
            });
        });

        $('[data-toggle="tooltip"]').tooltip();
    </script>
}

